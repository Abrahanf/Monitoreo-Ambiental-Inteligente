# infrastructure/docker-compose.yml
# Para desarrollo local
version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: env_monitoring_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: environmental_monitoring
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Flask
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: env_monitoring_backend
    environment:
      FLASK_ENV: development
      DATABASE_URL: mysql+pymysql://appuser:apppassword@mysql:3306/environmental_monitoring
      JWT_SECRET_KEY: dev-jwt-secret-key
      MQTT_BROKER_URL: mqtt_broker
      IA_SERVICE_URL: http://ia_service:8001
    ports:
      - "5000:5000"
    volumes:
      - ../backend:/app
      - ../frontend:/frontend
    depends_on:
      mysql:
        condition: service_healthy
      mqtt_broker:
        condition: service_started
    networks:
      - app_network
    command: python run.py

  # Microservicio IA
  ia_service:
    build:
      context: ../ia-service
      dockerfile: Dockerfile
    container_name: env_monitoring_ia
    ports:
      - "8001:8001"
    volumes:
      - ../ia-service:/app
      - ia_models:/app/saved_models
    networks:
      - app_network

  # Broker MQTT (Mosquitto)
  mqtt_broker:
    image: eclipse-mosquitto:2
    container_name: env_monitoring_mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mqtt_data:/mosquitto/data
      - mqtt_logs:/mosquitto/log
    networks:
      - app_network

  # Nginx (opcional, para servir frontend est√°tico)
  nginx:
    image: nginx:alpine
    container_name: env_monitoring_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../frontend/static:/usr/share/nginx/html/static
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  mysql_data:
  mqtt_data:
  mqtt_logs:
  ia_models:

networks:
  app_network:
    driver: bridge

